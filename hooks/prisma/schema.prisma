generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Replace with your actual database URL in .env
}

model User {
  id       Int    @id @default(autoincrement()) // Primary key
  name     String
  email    String @unique // Emails are typically unique
  password String
}

model Connect {
  id        String   @id @default(uuid()) // Primary key
  triggerId String // Foreign key to Trigger
  trigger   Trigger? @relation(fields: [triggerId], references: [id])
}

model Trigger {
  id                String              @id @default(uuid()) // Primary key
  connectId         String // Connect identifier
  availableTriggers AvailableTriggers[] // One-to-many relationship
  connect           Connect[] // One-to-many relationship with Connect
  actions           Action[] // One-to-many relationship with Action
}

model AvailableTriggers {
  id        String   @id @default(uuid()) // Primary key
  name      String // Trigger name
  triggerId String? // Foreign key (nullable)
  trigger   Trigger? @relation(fields: [triggerId], references: [id])
}

model AvailableActions {
  id     String   @id @default(uuid()) // Primary key
  name   String // Action name
  Action Action[]
}

model Action {
  id                String           @id @default(uuid()) // Primary key
  availableActionId String // Foreign key to AvailableActions
  triggerId         String // Foreign key to Trigger
  trigger           Trigger          @relation(fields: [triggerId], references: [id])
  availableAction   AvailableActions @relation(fields: [availableActionId], references: [id])
  createdAt         DateTime         @default(now()) // Timestamp for action creation
  updatedAt         DateTime         @updatedAt // Auto-updated timestamp
}
